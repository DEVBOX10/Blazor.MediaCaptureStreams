@page "/mediaselector"
@inject IMediaDevicesService MediaDevicesService
@inject IJSRuntime JSRuntime

<PageTitle>Media Capture and Streams - Load Devices</PageTitle>

<h2>On this page we iterate and display information about all devices before selecting one.</h2>

@if (error is { } errorMessage)
{
    <p style="color: red;">@errorMessage</p>
}
else
{
    @foreach (var option in deviceOptions)
    {
        <div class="border p-1">
            <h3>
                @if (option.kind is MediaDeviceKind.AudioInput)
                {
                    <span class="oi oi-microphone" aria-hidden="true"></span>
                }
                else if (option.kind is MediaDeviceKind.AudioOutput)
                {
                    <span class="oi oi-volume-high" aria-hidden="true"></span>
                }
                else if (option.kind is MediaDeviceKind.VideoInput)
                {
                    <span class="oi oi-video" aria-hidden="true"></span>
                }
                &nbsp;@option.label
            </h3>
            id: <u>@option.id</u>
            <br />
            group: @option.group
        </div>
    }
}

@code {
    private string? error;
    private List<(string label, MediaDeviceKind kind, string id, string group)> deviceOptions = new();

    protected override async Task OnInitializedAsync()
    {
        var devices = await MediaDevicesService.GetMediaDevicesAsync();
        var deviceInfos = await devices.EnumerateDevicesAsync();
        foreach (MediaDeviceInfo info in deviceInfos)
        {
            deviceOptions.Add(
                (
                    label: await info.GetLabelAsync(),
                    kind: await info.GetKindAsync(),
                    id: await info.GetDeviceIdAsync(),
                    group: await info.GetGroupIdAsync()
                )
            );
        }
    }
}